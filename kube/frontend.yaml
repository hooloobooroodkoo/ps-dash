kind: Service
apiVersion: v1
metadata:
  name: ps-dash
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8050
  selector:
    k8s-app: ps-dash
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ps-dash
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - ps-dash.uc.ssl-hep.org
    secretName: autogenerated-for-ps-dash
  rules:
  - host: ps-dash.uc.ssl-hep.org
    http:
      paths:
      - path: /
        backend:
          serviceName: ps-dash
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ps-dash 
  namespace: perfsonar-platform
  labels:
    k8s-app: ps-dash
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: ps-dash
  template:
    metadata:
      labels:
        k8s-app: ps-dash
    spec:
      containers:
      - name: ps-dash
        image: ivukotic/ps-dash:latest
        # command: ["sleep"]
        # args: ["36500000"]
        ports:
          - containerPort: 80
        # livenessProbe:
        #   httpGet:
        #     scheme: HTTP
        #     path: /healthz
        #     port: 80
        #   periodSeconds: 60
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 10
        volumeMounts:
        - name: frontend-conf-volume
          mountPath: "/etc/ps-dash/"
      volumes:
      - name: frontend-conf-volume
        secret:
          secretName: ps-dash-config
          items:
          - key: conf
            path: creds.key
